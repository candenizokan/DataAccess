// <auto-generated />
using System;
using LinqToSql.Infastructure.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using AppContext = LinqToSql.Infastructure.Context.AppContext;

namespace LinqToSql.Migrations
{
    [DbContext(typeof(AppContext))]
    [Migration("20230521093504_oney")]
    partial class oney
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.21")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("LinqToSql.Entities.Concrete.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Statu")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2023, 5, 21, 12, 35, 4, 355, DateTimeKind.Local).AddTicks(3870),
                            FirstName = "Ali",
                            LastName = "Yılmaz",
                            Statu = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2023, 5, 21, 12, 35, 4, 355, DateTimeKind.Local).AddTicks(3870),
                            FirstName = "Cevat",
                            LastName = "Fırtına",
                            Statu = 1
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2023, 5, 21, 12, 35, 4, 355, DateTimeKind.Local).AddTicks(3870),
                            FirstName = "Ayşe",
                            LastName = "Kırmızı",
                            Statu = 1
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2023, 5, 21, 12, 35, 4, 355, DateTimeKind.Local).AddTicks(3870),
                            FirstName = "Ömer",
                            LastName = "Seyfettin",
                            Statu = 1
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2023, 5, 21, 12, 35, 4, 355, DateTimeKind.Local).AddTicks(3870),
                            FirstName = "Can",
                            LastName = "Yücel",
                            Statu = 1
                        },
                        new
                        {
                            Id = 6,
                            CreatedDate = new DateTime(2023, 5, 21, 12, 35, 4, 355, DateTimeKind.Local).AddTicks(3870),
                            FirstName = "Mehmet",
                            LastName = "Kaş",
                            Statu = 1
                        },
                        new
                        {
                            Id = 7,
                            CreatedDate = new DateTime(2023, 5, 21, 12, 35, 4, 355, DateTimeKind.Local).AddTicks(3870),
                            FirstName = "Hakan",
                            LastName = "Yaşar",
                            Statu = 1
                        },
                        new
                        {
                            Id = 8,
                            CreatedDate = new DateTime(2023, 5, 21, 12, 35, 4, 355, DateTimeKind.Local).AddTicks(3870),
                            FirstName = "Celal",
                            LastName = "Kaya",
                            Statu = 1
                        },
                        new
                        {
                            Id = 9,
                            CreatedDate = new DateTime(2023, 5, 21, 12, 35, 4, 355, DateTimeKind.Local).AddTicks(3870),
                            FirstName = "İpek",
                            LastName = "Bilgin",
                            Statu = 1
                        },
                        new
                        {
                            Id = 10,
                            CreatedDate = new DateTime(2023, 5, 21, 12, 35, 4, 355, DateTimeKind.Local).AddTicks(3870),
                            FirstName = "Ece",
                            LastName = "Biricik",
                            Statu = 1
                        });
                });

            modelBuilder.Entity("LinqToSql.Entities.Concrete.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("GendreId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("Statu")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("GendreId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2023, 5, 21, 12, 35, 4, 358, DateTimeKind.Local).AddTicks(3853),
                            GendreId = "kor",
                            Price = 12.44,
                            Statu = 1,
                            Title = "Ali bananın çiftliği"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2023, 5, 21, 12, 35, 4, 358, DateTimeKind.Local).AddTicks(3853),
                            GendreId = "psk",
                            Price = 888.0,
                            Statu = 1,
                            Title = "Uçurtma Avcisi"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2023, 5, 21, 12, 35, 4, 358, DateTimeKind.Local).AddTicks(3853),
                            GendreId = "kor",
                            Price = 34.450000000000003,
                            Statu = 1,
                            Title = "Susma Sanatı"
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2023, 5, 21, 12, 35, 4, 358, DateTimeKind.Local).AddTicks(3853),
                            GendreId = "psk",
                            Price = 12.119999999999999,
                            Statu = 1,
                            Title = "Siyah Lale"
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2023, 5, 21, 12, 35, 4, 358, DateTimeKind.Local).AddTicks(3853),
                            GendreId = "blm",
                            Price = 244.0,
                            Statu = 1,
                            Title = "Körlük"
                        },
                        new
                        {
                            Id = 6,
                            CreatedDate = new DateTime(2023, 5, 21, 12, 35, 4, 358, DateTimeKind.Local).AddTicks(3853),
                            GendreId = "kor",
                            Price = 56.677999999999997,
                            Statu = 1,
                            Title = "Satranç"
                        },
                        new
                        {
                            Id = 7,
                            CreatedDate = new DateTime(2023, 5, 21, 12, 35, 4, 358, DateTimeKind.Local).AddTicks(3853),
                            GendreId = "mcr",
                            Price = 88.0,
                            Statu = 1,
                            Title = "Suç ve Ceza"
                        },
                        new
                        {
                            Id = 8,
                            CreatedDate = new DateTime(2023, 5, 21, 12, 35, 4, 358, DateTimeKind.Local).AddTicks(3853),
                            GendreId = "mcr",
                            Price = 367.0,
                            Statu = 1,
                            Title = "Yaprak Dökümü"
                        },
                        new
                        {
                            Id = 9,
                            CreatedDate = new DateTime(2023, 5, 21, 12, 35, 4, 358, DateTimeKind.Local).AddTicks(3853),
                            GendreId = "blm",
                            Price = 55.780000000000001,
                            Statu = 1,
                            Title = "Uzay"
                        },
                        new
                        {
                            Id = 10,
                            CreatedDate = new DateTime(2023, 5, 21, 12, 35, 4, 358, DateTimeKind.Local).AddTicks(3853),
                            GendreId = "syh",
                            Price = 99.989999999999995,
                            Statu = 1,
                            Title = "Sırça Köşk"
                        },
                        new
                        {
                            Id = 11,
                            CreatedDate = new DateTime(2023, 5, 21, 12, 35, 4, 358, DateTimeKind.Local).AddTicks(3853),
                            GendreId = "blm",
                            Price = 56.219999999999999,
                            Statu = 1,
                            Title = "Merhaba Dünya"
                        },
                        new
                        {
                            Id = 12,
                            CreatedDate = new DateTime(2023, 5, 21, 12, 35, 4, 358, DateTimeKind.Local).AddTicks(3853),
                            GendreId = "syh",
                            Price = 100.0,
                            Statu = 1,
                            Title = "Beyaz Kale"
                        },
                        new
                        {
                            Id = 13,
                            CreatedDate = new DateTime(2023, 5, 21, 12, 35, 4, 358, DateTimeKind.Local).AddTicks(3853),
                            GendreId = "mcr",
                            Price = 44.0,
                            Statu = 1,
                            Title = "Beyaz Diş"
                        },
                        new
                        {
                            Id = 14,
                            CreatedDate = new DateTime(2023, 5, 21, 12, 35, 4, 358, DateTimeKind.Local).AddTicks(3853),
                            GendreId = "psk",
                            Price = 200.0,
                            Statu = 1,
                            Title = "Kafaya Takma Sanatı"
                        },
                        new
                        {
                            Id = 15,
                            CreatedDate = new DateTime(2023, 5, 21, 12, 35, 4, 358, DateTimeKind.Local).AddTicks(3853),
                            GendreId = "blm",
                            Price = 800.0,
                            Statu = 1,
                            Title = "Bilge"
                        },
                        new
                        {
                            Id = 16,
                            CreatedDate = new DateTime(2023, 5, 21, 12, 35, 4, 358, DateTimeKind.Local).AddTicks(3853),
                            GendreId = "syh",
                            Price = 289.0,
                            Statu = 1,
                            Title = "Mai"
                        });
                });

            modelBuilder.Entity("LinqToSql.Entities.Concrete.BookAuthor", b =>
                {
                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.HasKey("AuthorId", "BookId");

                    b.HasIndex("BookId");

                    b.ToTable("BookAuthors");

                    b.HasData(
                        new
                        {
                            AuthorId = 1,
                            BookId = 2
                        },
                        new
                        {
                            AuthorId = 2,
                            BookId = 8
                        },
                        new
                        {
                            AuthorId = 10,
                            BookId = 9
                        },
                        new
                        {
                            AuthorId = 1,
                            BookId = 9
                        },
                        new
                        {
                            AuthorId = 3,
                            BookId = 2
                        },
                        new
                        {
                            AuthorId = 3,
                            BookId = 8
                        },
                        new
                        {
                            AuthorId = 4,
                            BookId = 11
                        },
                        new
                        {
                            AuthorId = 10,
                            BookId = 10
                        },
                        new
                        {
                            AuthorId = 8,
                            BookId = 14
                        },
                        new
                        {
                            AuthorId = 6,
                            BookId = 15
                        },
                        new
                        {
                            AuthorId = 3,
                            BookId = 16
                        },
                        new
                        {
                            AuthorId = 4,
                            BookId = 1
                        },
                        new
                        {
                            AuthorId = 5,
                            BookId = 3
                        },
                        new
                        {
                            AuthorId = 6,
                            BookId = 4
                        },
                        new
                        {
                            AuthorId = 2,
                            BookId = 5
                        },
                        new
                        {
                            AuthorId = 7,
                            BookId = 6
                        },
                        new
                        {
                            AuthorId = 2,
                            BookId = 7
                        },
                        new
                        {
                            AuthorId = 7,
                            BookId = 12
                        },
                        new
                        {
                            AuthorId = 4,
                            BookId = 13
                        });
                });

            modelBuilder.Entity("LinqToSql.Entities.Concrete.Gendre", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Statu")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Gendres");

                    b.HasData(
                        new
                        {
                            Id = "kor",
                            CreatedDate = new DateTime(2023, 5, 21, 12, 35, 4, 364, DateTimeKind.Local).AddTicks(4005),
                            Name = "Korku",
                            Statu = 1
                        },
                        new
                        {
                            Id = "psk",
                            CreatedDate = new DateTime(2023, 5, 21, 12, 35, 4, 364, DateTimeKind.Local).AddTicks(4005),
                            Name = "Psikoloji",
                            Statu = 1
                        },
                        new
                        {
                            Id = "mcr",
                            CreatedDate = new DateTime(2023, 5, 21, 12, 35, 4, 364, DateTimeKind.Local).AddTicks(4005),
                            Name = "Macera",
                            Statu = 1
                        },
                        new
                        {
                            Id = "syh",
                            CreatedDate = new DateTime(2023, 5, 21, 12, 35, 4, 364, DateTimeKind.Local).AddTicks(4005),
                            Name = "Seyehat",
                            Statu = 1
                        },
                        new
                        {
                            Id = "blm",
                            CreatedDate = new DateTime(2023, 5, 21, 12, 35, 4, 364, DateTimeKind.Local).AddTicks(4005),
                            Name = "Bilim",
                            Statu = 1
                        });
                });

            modelBuilder.Entity("LinqToSql.Entities.Concrete.Book", b =>
                {
                    b.HasOne("LinqToSql.Entities.Concrete.Gendre", "Gendre")
                        .WithMany("Books")
                        .HasForeignKey("GendreId");
                });

            modelBuilder.Entity("LinqToSql.Entities.Concrete.BookAuthor", b =>
                {
                    b.HasOne("LinqToSql.Entities.Concrete.Author", "Author")
                        .WithMany("BookAuthors")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LinqToSql.Entities.Concrete.Book", "Book")
                        .WithMany("BookAuthors")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
